[package]
name = "fig_desktop"
authors = ["Amazon Q Devs"]
edition.workspace = true
homepage = "https://aws.amazon.com/codewhisperer"
publish.workspace = true
version.workspace = true
license.workspace = true

[lints]
workspace = true

[package.metadata.bundle]
name = "Fig"
icon = [
    "./icons/128x128.png",
    "./icons/16x16.png",
    "./icons/22x22.png",
    "./icons/24x24.png",
    "./icons/256x256.png",
    "./icons/32x32.png",
    "./icons/48x48.png",
    "./icons/512x512.png",
    "./icons/64x64.png",
]
identifier = "com.amazon.codewhisperer"
resource = "./autocomplete-icons/*"

[features]
default = []
# console = ["tokio/tracing", "fig_log/console"]
# Required for cargo-tauri CLI
custom-protocol = []

[dependencies]
anyhow.workspace = true
async-trait.workspace = true
base64.workspace = true
bytes.workspace = true
camino.workspace = true
cfg-if.workspace = true
clap.workspace = true
dashmap.workspace = true
fig_api_client.workspace = true
fig_auth.workspace = true
fig_desktop_api.workspace = true
fig_install.workspace = true
fig_integrations = { workspace = true, features = ["dispatch"] }
fig_ipc.workspace = true
fig_log.workspace = true
fig_os_shim.workspace = true
fig_proto.workspace = true
fig_remote_ipc.workspace = true
fig_request.workspace = true
fig_settings.workspace = true
fig_telemetry.workspace = true
fig_util.workspace = true
flume.workspace = true
fnv = "1.0.7"
futures.workspace = true
http.workspace = true
image = "0.25.6"
infer = "0.19.0"
keyboard-types = "0.8.0"
mime = "0.3.17"
moka = { version = "0.12.1", features = ["future"] }
muda = { version = "0.15.3", default-features = false }
notify = "8.0.0"
parking_lot = { workspace = true, features = ["serde"] }
paste = "1.0.11"
percent-encoding.workspace = true
rand.workspace = true
regex.workspace = true
rfd = "0.15.1"
semver.workspace = true
serde.workspace = true
serde_json.workspace = true
shellexpand.workspace = true
sysinfo.workspace = true
tao = { version = "0.31.1", features = ["serde"] }
tempfile.workspace = true
time.workspace = true
tokio.workspace = true
tracing.workspace = true
tray-icon = { version = "0.19.2", default-features = false }
url.workspace = true
uuid.workspace = true
which.workspace = true
whoami.workspace = true
wry = { version = "0.48.1", default-features = false, features = [
    # "tao",
    "protocol",
    "devtools",
    "transparent",
    "linux-body",
] }

[dev-dependencies]
tracing-subscriber.workspace = true

[target.'cfg(target_os = "windows")'.dependencies.windows]
version = "0.58.0"
features = [
    "implement",
    "Win32_Foundation",
    "Win32_Graphics_Gdi",
    "Win32_Networking_WinSock",
    "Win32_Security",
    "Win32_Storage_FileSystem",
    "Win32_System_Com",
    "Win32_System_Console",
    "Win32_System_Ole",
    "Win32_System_Threading",
    "Win32_System_ProcessStatus",
    "Win32_UI_WindowsAndMessaging",
    "Win32_UI_Accessibility",
]

[target.'cfg(unix)'.dependencies]
nix.workspace = true

[target.'cfg(target_os = "linux")'.dependencies]
dbus = { path = "../dbus" }
freedesktop-icons = "0.4.0"
gtk = "0.18"
x11rb = "0.13.0"
zbus = { path = "../zbus" }

[target.'cfg(target_os="macos")'.dependencies]
accessibility-sys = { path = "../macos-utils/accessibility-master/accessibility-sys", version = "0.1.3" }
cocoa.workspace = true
core-foundation.workspace = true
core-graphics.workspace = true
libc.workspace = true
macos-utils = { path = "../macos-utils" }
objc.workspace = true
objc2.workspace = true
objc2-app-kit = { workspace = true, features = ["NSApplication"] }
objc2-foundation.workspace = true
system-configuration = "0.6.0"

[build-dependencies]
image = "0.25.6"
